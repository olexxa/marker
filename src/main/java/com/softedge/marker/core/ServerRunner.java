package com.softedge.marker.core;import org.apache.log4j.Logger;import org.jetbrains.annotations.NotNull;import java.util.HashSet;import java.util.Set;/** * @author <a href="mailto:me@olexxa.com">Alexey Adamov</a> */public class ServerRunner extends Thread {	private final static Logger log = Logger.getLogger(ServerRunner.class);	@NotNull	private final Server[] servers;	private boolean ready;	public ServerRunner(@NotNull Server... servers) {		this.servers = servers;	}	@Override	public void run() {        Set<Server> started = new HashSet<>();        try {            for (Server server: servers) {                ready = server.start();                if (!ready)                    return;                started.add(server);            }            try {                join(0);            } catch (InterruptedException e) {                log.debug("Server interrupted");            }        } finally {			log.debug("Stopping server");			for (Server server: started)				server.stop();			ready = false;		}	}	@SuppressWarnings("UnusedDeclaration")	public boolean ready() {		return ready;	}	@SuppressWarnings("UnusedDeclaration")    public void startup() {		log.info("Starting server");	    start();		while (!ready && isAlive())            try {                sleep(100);            } catch (InterruptedException ignored) {            }    }	@SuppressWarnings("UnusedDeclaration")	public void shutdown() {		interrupt();	}}